jQuery(function ($) {
    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    function getParameterByNamew(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^?#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    if ($('#dyntable_commission_list').length > 0) {
        $('#dyntable_commission_list').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_report.php?report=" + getParameterByName('report'),
            "aoColumnDefs": [{"bSortable": false, "aTargets": [4]}],
            "aaSorting": [[0, "desc"]],
            "bFilter": true,
            "bResponsive": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }
        });
    }
    if ($('#dyntable_commission_list_subs').length > 0) {
        $('#dyntable_commission_list_subs').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_report.php?report=" + getParameterByName('report'),
            "aoColumnDefs": [{"bSortable": false, "aTargets": [4]}],
            "aaSorting": [[0, "desc"]],
            "bFilter": true,
            "bResponsive": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }

        });
    }

    if ($('#dyntable_payment_history').length > 0) {
        $('#dyntable_payment_history').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_history.php?report=3",
            "aoColumnDefs": [{"targets": 'no-sort', "orderable": false,}],
            "columns": [{ className: "date-column" },null,null,null],
            "aaSorting": [[0, "desc"]],
            "bFilter": true,
            "bResponsive": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }

        });
    }
    if ($('#dyntable_payment_Traffic').length > 0) {
        $('#dyntable_payment_Traffic').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_traffic.php?report=" + getParameterByNamew('page'),
            "aaSorting": [[0, "desc"]],
            "bFilter": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }

        });
    }
    // general statistics
    if ($('#dyntable_Stats').length > 0) {

        var startD = moment().format("YYYY-MM-DD");
        var endD = moment().format("YYYY-MM-DD");
        var dyntable_Stats = $('#dyntable_Stats').DataTable({
            "bProcessing": true,
            "bServerSide": true,
            "bFilter": true,
            "bResponsive": true,
            "ajax": {
                "url": "/templates/internals/core_ajax_stats.php",
                "data": {
                    "startD": moment().format("YYYY-MM-DD"),
                    "endD": moment().format("YYYY-MM-DD")
                }
            },
            "dom": "<'row'<'col-sm-6 col-sm-offset-6 text-right'l>>" +
            "<'row'<'col-sm-12'tr>>" +
            "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            "columns": [
                {"data": "date_", "className": "date-column"},
                {"data": "raw_visits"},
                {
                    "class": "details-control raw_visits",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                },
                {"data": "unique_visits"},
                {
                    "class": "details-control unique_visits",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                },
                {"data": "transactions"},
                {
                    "class": "details-control transactions",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                },
                {"data": "sales_ratio"},
                {
                    "class": "details-control sales_ratio",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                },
                {"data": "rpm"},
                {
                    "class": "details-control rpm",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                },
                {"data": "earnings"},
                {
                    "class": "details-control earnings",
                    "orderable": false,
                    "data": null,
                    "defaultContent": ""
                }
            ],
            "aaSorting": [[0, 'desc']],
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            },
            "footerCallback": function (row, data, start, end, display) {
                if(this.api().rows().count() === 1)
                {
                    $("#dyntable_Stats tfoot").hide();
                    return;
                }else{
                    $("#dyntable_Stats tfoot").show();
                }
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                    i.replace(/[\%,€]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                totalRaw = api
                    .column(1, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                totalUnique = api
                    .column(3, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                totalTransactions = api
                    .column(5, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                totalSalesRatio = api
                    .column(7, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                totalRpm = api
                    .column(9, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);
                totalEarnings = api
                    .column(11, {page: 'current'})
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                // Update footer
                $(api.column(1).footer()).html(
                    totalRaw
                );
                $(api.column(3).footer()).html(
                    totalUnique
                );
                $(api.column(5).footer()).html(
                    totalTransactions
                );
/* remove this because it calculcates average of rows, rather than from footer details, which is more accurate
                var num = api
                    .column(7)
                    .data()
                    .length;
                $(api.column(7).footer()).html(
                    (totalSalesRatio / num).toFixed(3) + "%"
                );
                $(api.column(9).footer()).html(
                    (totalRpm / num).toFixed(2) + " €"
                );
                $(api.column(11).footer()).html(
                    totalEarnings.toFixed(2) + " €"
                );
*/
                if (totalUnique === 0) {
                $(api.column(7).footer()).html(
                0 + ".000%"
                );
                } else {
                $(api.column(7).footer()).html(
                    (totalTransactions / totalUnique * 100).toFixed(3) + "%"
                );
                }
                if (totalUnique === 0) {
                $(api.column(9).footer()).html(
                0 + ".00 €"
                );
                } else {
                $(api.column(9).footer()).html(
                    (totalEarnings / totalUnique * 1000).toFixed(2) + " €"
                );
                }
                $(api.column(11).footer()).html(
                    totalEarnings.toFixed(2) + " €"
                );
            }
        });
        var trans = JSON.parse($("#trans").val());

        $('#range').daterangepicker({
            startDate: moment(),
            endDate: moment(),
            maxDate: moment(),
            showWeekNumbers: true,
            ranges: {
                [trans.custom_today]: [moment(), moment()],
                [trans.custom_yesterday]: [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                [trans.custom_last_seven_days]: [moment().subtract(6, 'days'), moment()],
                [trans.custom_last_thirty_days]: [moment().subtract(29, 'days'), moment()],
                [trans.custom_this_month]: [moment().startOf('month'), moment().endOf('month')],
                [trans.custom_last_month]: [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                [trans.custom_this_year]: [moment().startOf('year'), moment().endOf('year')],
                [trans.custom_last_year]: [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]
            },
            locale: {
                "format": "YYYY-MM-DD",
                "separator": " - ",
                "applyLabel": trans.custom_apply,
                "cancelLabel": trans.custom_custom_cancel,
                "fromLabel": trans.custom_from,
                "toLabel": trans.custom_to,
                "customRangeLabel": trans.custom_custom,
                "weekLabel": trans.custom_w,
                "daysOfWeek": [
                    trans.custom_su,
                    trans.custom_mo,
                    trans.custom_tu,
                    trans.custom_we,
                    trans.custom_th,
                    trans.custom_fr,
                    trans.custom_sa
                ],
                "monthNames": [
                    trans.custom_january,
                    trans.custom_february,
                    trans.custom_march,
                    trans.custom_april,
                    trans.custom_may,
                    trans.custom_june,
                    trans.custom_july,
                    trans.custom_august,
                    trans.custom_september,
                    trans.custom_october,
                    trans.custom_november,
                    trans.custom_december
                ],
                "firstDay": 1
            }
        }, function (start, end, label) {
            startD = start.format("YYYY-MM-DD");
            endD = end.format("YYYY-MM-DD");
            dyntable_Stats
                .columns(0)
                .search(startD + "|" + endD)
                .draw();
            /*console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));*/
        });
        var detailRows = [];
        $('#dyntable_Stats').on('click', 'tbody tr td.details-control, tfoot tr th.details-control', function () {
            var td = $(this);
            var type = td.attr("class");
            var tr = td.closest('tr');
            var idx = $.inArray(tr.attr('id'), detailRows);
            if (type.includes("total")) {
                var row = tr;
                if (row.parent().find("tr .div-details").size() > 0) {
                    td.removeClass('details');
                    row.parent().find("tr .div-details").parents("tr").remove();

                    // Remove from the 'open' array
                    detailRows.splice(idx, 1);
                }
                else {
                    td.addClass('details');
                    var tr = $("<tr><td colspan='13'></td></tr>");
                    tr.find("td").append(format(row.data(), type));
                    row.parent().append(tr);

                    // Add to the 'open' array
                    if (idx === -1) {
                        detailRows.push(tr.attr('id'));
                    }
                }
            } else {
                var row = dyntable_Stats.row(tr);
                if (row.child.isShown()) {
                    td.removeClass('details');
                    row.child.hide();

                    // Remove from the 'open' array
                    detailRows.splice(idx, 1);
                }
                else {
                    td.addClass('details');
                    row.child(format(row.data(), type)).show();

                    // Add to the 'open' array
                    if (idx === -1) {
                        detailRows.push(tr.attr('id'));
                    }
                }
            }
        });


        // On each draw, loop over the `detailRows` array and show any child rows
        dyntable_Stats.on('draw', function () {
            $.each(detailRows, function (i, id) {
                $('#' + id + ' td.details-control').trigger('click');
            });
        });
        function format(d, type) {
            var infoT = type.replace("details-control ", "").trim();
            var dates = {};
            if (infoT.includes("total")) {
                infoT = infoT.replace("total ", "").trim();
                infoT += "_total";
                dates.startD = startD;
                dates.endD = endD;
            } else {
                dates.startD = d.date_;
                dates.endD = d.date_;
            }
            var div = $("<div class='div-details'></div>").text(langDataTable["sProcessing"]);
            $.ajax({
                url: '/templates/internals/core_ajax_stats_detail.php',
                data: {startD: dates.startD, endD: dates.endD, info: infoT},
                dataType: 'json',
                cache: false,
                success: function (info) {
                    // Countries
                    var f = "<ul class='col-sm-4 countries-r'><h4>" + trans.custom_country + "</h4><br>";
                    for (var g = 0; g < info.country.length; g++) {
                        var data = info.country[g];
                        if (data.n === "-")
                            data.n = "N/A";
                        if (data.n === "XX")
                            data.n = "N/A";
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;

                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li><img border=\"0\" src=\"/images/geo_flags/" + data.n.toLowerCase() + ".png\" class=\"geo_flag\"/> " + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul>"
                    f += "<ul class='col-sm-2 tid1-r'><h4>" + trans.custom_tracking_id_one + "</h4><br>";
                    //Tid1
                    for (var g = 0; g < info.tid1.length; g++) {
                        var data = info.tid1[g];
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;
                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li>" + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul>"
                    //Tid2
                    f += "<ul class='col-sm-2 tid2-r'><h4>" + trans.custom_tracking_id_two + "</h4><br>";
                    for (var g = 0; g < info.tid2.length; g++) {
                        var data = info.tid2[g];
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;
                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li>" + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul>"
                    //Tid3
                    f += "<ul class='col-sm-2 tid3-r'><h4>" + trans.custom_tracking_id_three + "</h4><br>";
                    for (var g = 0; g < info.tid3.length; g++) {
                        var data = info.tid3[g];
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;
                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li>" + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul>"
                    // Tid4
                    f += "<ul class='col-sm-2 tid4-r'><h4>" + trans.custom_tracking_id_four + "</h4><br>";
                    for (var g = 0; g < info.tid4.length; g++) {
                        var data = info.tid4[g];
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;
                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li>" + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul><br>";
                    // Tid combinations
                    f += "<ul class='col-sm-12'><h4>" + trans.custom_tracking_ids_combinations + "</h4><br>";
                    for (var g = 0; g < info.combinations.length; g++) {
                        var data = info.combinations[g];
                        if(parseFloat(data.v).toFixed(2) == 0.00)
                            continue;
                        if(infoT.includes("earnings") || infoT.includes("rpm"))
                        {
                            data.v = parseFloat(data.v).toFixed(2) + " €";
                        }else if(infoT.includes("sales_ratio"))
                        {
                            data.v = parseFloat(data.v).toFixed(3) + "%";
                        }
                        f += "<li>" + data.n + ": " + data.v + "</li>"
                    }
                    f += "</ul>"

                    var resu = $(f);
                    div.html(resu);
                }
            });
            return div;
        }
    }

// stats table DataTables end //

    if ($('#dyntable_payment_Tier').length > 0) {
        $('#dyntable_payment_Tier').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_tier.php?report=" + getParameterByNamew('page'),
            "aaSorting": [[0, "desc"]],
            "bFilter": false,
            "bResponsive": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }

        });

        $('#dyntable_payment_Tier').on('click', '.load_more', function () {
            var th = $(this);
            var space = th.data('space');
            var parent = th.data('parent');
            var page_now = th.data('page_now');
            var token = th.data('token');
            //var str = 'Space: ' + space + ', Parent: ' + parent + ', Page Now: ' + page_now;
            //console.log(str);
            var data = {
                'space': space,
                'parent': parent,
                'page_now': page_now,
                'csrf_token': token
            };
            th.html('<i class="fa fa-spinner" aria-hidden="true"></i>');
            //call ajax
            $.ajax({
                url: "templates/internals/core_tier_getchild.php",
                data: data,
                method: "POST",
                dataType: "json"
            }).error(function (err) {
                console.log(err);

            }).done(function () {
                th.html('<i class="fa fa-plus" aria-hidden="true"></i>');
            }).success(function (response) {

                if (response.success) {
                    if (response.output && response.output != '') {
                        th.closest("tr").after(response.output);
                    }
                }

                if (response.end && response.end == 1) {
                    th.hide();
                } else {

                    if (response.page_now) {
                        th.data('page_now', response.page_now);
                    }

                    if (response.space) {
                        th.data('space', response.space);
                    }
                }

            }, 'json');


        });

    }
    if ($('#dyntable_Pending_Debits').length > 0) {
        $('#dyntable_Pending_Debits').dataTable({
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/templates/internals/core_ajax_Pending_Debit.php?report=" + getParameterByNamew('page'),
            "aaSorting": [[0, "desc"]],
            "bFilter": true,
            "bResponsive": true,
            "oLanguage": {
                "sEmptyTable": langDataTable["sEmptyTable"],
                "sInfo": langDataTable["sInfo"],
                "sInfoEmpty": langDataTable["sInfoEmpty"],
                "sInfoFiltered": langDataTable["sInfoFiltered"],
                "sInfoPostFix": "",
                "sInfoThousands": ",",
                "sLengthMenu": langDataTable["sLengthMenu"],
                "sLoadingRecords": langDataTable["sLoadingRecords"],
                "sProcessing": langDataTable["sProcessing"],
                "sSearch": langDataTable["sSearch"],
                "sZeroRecords": langDataTable["sZeroRecords"],
                "oPaginate": {
                    "sFirst": langDataTable["sFirst"],
                    "sLast": langDataTable["sLast"],
                    "sNext": langDataTable["sNext"],
                    "sPrevious": langDataTable["sPrevious"]
                },
                "oAria": {
                    "sSortAscending": langDataTable["sSortAscending"],
                    "sSortDescending": langDataTable["sSortDescending"]
                }
            }

        });
    }


});
